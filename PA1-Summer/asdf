
public class asdf
{
    public static int valueReturn(int[] A) {
        int x, y, count;
        int length = 0;
        count = succ(A, length, 10) - pred(A, length, 5);
        if (pred(A, length, 2) == succ(A, length, 14)) {
            return count;
        }
        return count;
    }
    
    public static int pred(int array[], int arrayLen, int key) { // complete this method
        int left = 0, right = arrayLen - 1;
        int predIndex = -1;
        while (left <= right) {
            int mid = (left + right) / 2;
            if (array[mid] == key) {
                return mid;
            }
            else if (array[mid] < key) {
                predIndex = mid;
                left = mid + 1;
            }
            else if (array[mid] > key) {
                right = mid - 1;
            }
        }
        return predIndex;
    }
    
    public static int succ(int array[], int arrayLen, int key) { // complete this method
        int left = 0, right = arrayLen - 1;
        int succIndex = -1;
        while (left <= right) {
            int mid = (left + right) / 2;
            if (array[mid] == key) {
                return mid;
            }
            else if (array[mid] < key) {
                succIndex = mid;
                left = mid - 1;
            }
            else if (array[mid] > key) {
                right = mid + 1;
            }
        }
        return succIndex;
    }
    
    public static void main(String args[]) {
        int[] array = {1, 3, 6, 13, 15, 16};
        System.out.print(valueReturn(array));       
        
    }
}
